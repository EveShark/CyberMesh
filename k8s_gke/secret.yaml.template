apiVersion: v1
kind: Secret
metadata:
  name: cybermesh-secrets
  namespace: cybermesh
  labels:
    app: consensus-backend
type: Opaque
data:
  # IMPORTANT: Replace all values with base64 encoded secrets
  # Use: echo -n "your-secret" | base64 -w 0
  
  DB_PASSWORD: <BASE64_ENCODED_DB_PASSWORD>
  DB_DSN: <BASE64_ENCODED_DB_DSN>
  DATABASE_URL: <BASE64_ENCODED_DATABASE_URL>
  
  KAFKA_SASL_USERNAME: <BASE64_ENCODED_KAFKA_USERNAME>
  KAFKA_SASL_PASSWORD: <BASE64_ENCODED_KAFKA_PASSWORD>
  
  REDIS_PASSWORD: <BASE64_ENCODED_REDIS_PASSWORD>
  
  ENCRYPTION_KEY: <BASE64_ENCODED_ENCRYPTION_KEY>
  SECRET_KEY: <BASE64_ENCODED_SECRET_KEY>
  SALT: <BASE64_ENCODED_SALT>
  
  JWT_SECRET: <BASE64_ENCODED_JWT_SECRET>
  AES_KEY: <BASE64_ENCODED_AES_KEY>
  AUDIT_SIGNING_KEY: <BASE64_ENCODED_AUDIT_KEY>
  
  # Node signing keys for each of the 5 validators
  CRYPTO_SIGNING_KEY_HEX_1: <BASE64_ENCODED_NODE1_KEY>
  CRYPTO_SIGNING_KEY_HEX_2: <BASE64_ENCODED_NODE2_KEY>
  CRYPTO_SIGNING_KEY_HEX_3: <BASE64_ENCODED_NODE3_KEY>
  CRYPTO_SIGNING_KEY_HEX_4: <BASE64_ENCODED_NODE4_KEY>
  CRYPTO_SIGNING_KEY_HEX_5: <BASE64_ENCODED_NODE5_KEY>

---
apiVersion: v1
kind: Secret
metadata:
  name: validator-keys
  namespace: cybermesh
type: Opaque
data:
  # Base64 encode PEM files: cat validator_1_private.pem | base64 -w 0
  validator_1_private.pem: <BASE64_ENCODED_PEM_1>
  validator_2_private.pem: <BASE64_ENCODED_PEM_2>
  validator_3_private.pem: <BASE64_ENCODED_PEM_3>
  validator_4_private.pem: <BASE64_ENCODED_PEM_4>
  validator_5_private.pem: <BASE64_ENCODED_PEM_5>

---
apiVersion: v1
kind: Secret
metadata:
  name: validator-pubkeys
  namespace: cybermesh
type: Opaque
data:
  VALIDATOR_1_PUBKEY_HEX: <BASE64_ENCODED_PUBKEY_1>
  VALIDATOR_2_PUBKEY_HEX: <BASE64_ENCODED_PUBKEY_2>
  VALIDATOR_3_PUBKEY_HEX: <BASE64_ENCODED_PUBKEY_3>
  VALIDATOR_4_PUBKEY_HEX: <BASE64_ENCODED_PUBKEY_4>
  VALIDATOR_5_PUBKEY_HEX: <BASE64_ENCODED_PUBKEY_5>
