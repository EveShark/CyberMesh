# Multi-stage build: Build Go binary inside Docker on Linux
# Stage 1: Build
FROM golang:1.23-bookworm AS builder

WORKDIR /build

# Copy go mod files
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY cmd/ ./cmd/
COPY pkg/ ./pkg/
COPY proto/ ./proto/

# Build for Linux
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
    -ldflags="-w -s" \
    -o cybermesh \
    ./cmd/cybermesh

# Stage 2: Runtime
FROM debian:bookworm-slim

# Install CA certificates and curl
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -g 1000 cybermesh && \
    useradd -u 1000 -g cybermesh -s /bin/bash -m cybermesh

WORKDIR /app

# Copy binary from builder stage
COPY --from=builder --chown=cybermesh:cybermesh /build/cybermesh ./cybermesh
RUN chmod +x ./cybermesh

# Create necessary directories
RUN mkdir -p /app/keys /app/logs && chown -R cybermesh:cybermesh /app

USER cybermesh

EXPOSE 8443 9441 8001 9100

CMD ["/app/cybermesh"]
