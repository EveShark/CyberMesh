// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.31.1
// source: control_reputation.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ReputationEvent represents control.reputation.v1 message from backend to AI service
// Purpose: Provide feedback on AI detection quality for model tuning
// TODO: BACKEND - Implement producer (currently no backend implementation)
type ReputationEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Message tracking
	AiMessageId  string `protobuf:"bytes,1,opt,name=ai_message_id,json=aiMessageId,proto3" json:"ai_message_id,omitempty"`    // Original anomaly/evidence/policy ID
	AiProducerId []byte `protobuf:"bytes,2,opt,name=ai_producer_id,json=aiProducerId,proto3" json:"ai_producer_id,omitempty"` // AI node that produced message (32-byte Ed25519 pubkey)
	MessageType  string `protobuf:"bytes,3,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`      // "anomaly", "evidence", or "policy"
	// Reputation score and feedback
	Score  int32  `protobuf:"varint,4,opt,name=score,proto3" json:"score,omitempty"`  // Reputation score -100 to +100
	Reason string `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"` // Human-readable reason for score
	// Ground truth (if available)
	Confirmed     bool   `protobuf:"varint,6,opt,name=confirmed,proto3" json:"confirmed,omitempty"`                              // True if threat confirmed by analyst
	FalsePositive bool   `protobuf:"varint,7,opt,name=false_positive,json=falsePositive,proto3" json:"false_positive,omitempty"` // True if determined to be false alarm
	AnalystNotes  string `protobuf:"bytes,8,opt,name=analyst_notes,json=analystNotes,proto3" json:"analyst_notes,omitempty"`     // Optional analyst feedback/notes
	// Impact assessment
	IncidentSeverity uint32 `protobuf:"varint,9,opt,name=incident_severity,json=incidentSeverity,proto3" json:"incident_severity,omitempty"` // Actual incident severity (1-10) if confirmed
	PreventedAttack  bool   `protobuf:"varint,10,opt,name=prevented_attack,json=preventedAttack,proto3" json:"prevented_attack,omitempty"`   // True if AI detection prevented successful attack
	// Metadata
	Timestamp   int64 `protobuf:"varint,11,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                        // Unix timestamp (seconds)
	BlockHeight int64 `protobuf:"varint,12,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"` // Block height where original message was committed
	// Cryptographic envelope
	ProducerId    []byte `protobuf:"bytes,13,opt,name=producer_id,json=producerId,proto3" json:"producer_id,omitempty"` // Backend node public key (32 bytes Ed25519)
	Signature     []byte `protobuf:"bytes,14,opt,name=signature,proto3" json:"signature,omitempty"`                     // Ed25519 signature (64 bytes)
	Pubkey        []byte `protobuf:"bytes,15,opt,name=pubkey,proto3" json:"pubkey,omitempty"`                           // Ed25519 public key (32 bytes)
	Alg           string `protobuf:"bytes,16,opt,name=alg,proto3" json:"alg,omitempty"`                                 // Signature algorithm "Ed25519"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReputationEvent) Reset() {
	*x = ReputationEvent{}
	mi := &file_control_reputation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReputationEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReputationEvent) ProtoMessage() {}

func (x *ReputationEvent) ProtoReflect() protoreflect.Message {
	mi := &file_control_reputation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReputationEvent.ProtoReflect.Descriptor instead.
func (*ReputationEvent) Descriptor() ([]byte, []int) {
	return file_control_reputation_proto_rawDescGZIP(), []int{0}
}

func (x *ReputationEvent) GetAiMessageId() string {
	if x != nil {
		return x.AiMessageId
	}
	return ""
}

func (x *ReputationEvent) GetAiProducerId() []byte {
	if x != nil {
		return x.AiProducerId
	}
	return nil
}

func (x *ReputationEvent) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *ReputationEvent) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ReputationEvent) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ReputationEvent) GetConfirmed() bool {
	if x != nil {
		return x.Confirmed
	}
	return false
}

func (x *ReputationEvent) GetFalsePositive() bool {
	if x != nil {
		return x.FalsePositive
	}
	return false
}

func (x *ReputationEvent) GetAnalystNotes() string {
	if x != nil {
		return x.AnalystNotes
	}
	return ""
}

func (x *ReputationEvent) GetIncidentSeverity() uint32 {
	if x != nil {
		return x.IncidentSeverity
	}
	return 0
}

func (x *ReputationEvent) GetPreventedAttack() bool {
	if x != nil {
		return x.PreventedAttack
	}
	return false
}

func (x *ReputationEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ReputationEvent) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *ReputationEvent) GetProducerId() []byte {
	if x != nil {
		return x.ProducerId
	}
	return nil
}

func (x *ReputationEvent) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *ReputationEvent) GetPubkey() []byte {
	if x != nil {
		return x.Pubkey
	}
	return nil
}

func (x *ReputationEvent) GetAlg() string {
	if x != nil {
		return x.Alg
	}
	return ""
}

var File_control_reputation_proto protoreflect.FileDescriptor

const file_control_reputation_proto_rawDesc = "" +
	"\n" +
	"\x18control_reputation.proto\x12\x14cybermesh.control.v1\"\x98\x04\n" +
	"\x0fReputationEvent\x12\"\n" +
	"\rai_message_id\x18\x01 \x01(\tR\vaiMessageId\x12$\n" +
	"\x0eai_producer_id\x18\x02 \x01(\fR\faiProducerId\x12!\n" +
	"\fmessage_type\x18\x03 \x01(\tR\vmessageType\x12\x14\n" +
	"\x05score\x18\x04 \x01(\x05R\x05score\x12\x16\n" +
	"\x06reason\x18\x05 \x01(\tR\x06reason\x12\x1c\n" +
	"\tconfirmed\x18\x06 \x01(\bR\tconfirmed\x12%\n" +
	"\x0efalse_positive\x18\a \x01(\bR\rfalsePositive\x12#\n" +
	"\ranalyst_notes\x18\b \x01(\tR\fanalystNotes\x12+\n" +
	"\x11incident_severity\x18\t \x01(\rR\x10incidentSeverity\x12)\n" +
	"\x10prevented_attack\x18\n" +
	" \x01(\bR\x0fpreventedAttack\x12\x1c\n" +
	"\ttimestamp\x18\v \x01(\x03R\ttimestamp\x12!\n" +
	"\fblock_height\x18\f \x01(\x03R\vblockHeight\x12\x1f\n" +
	"\vproducer_id\x18\r \x01(\fR\n" +
	"producerId\x12\x1c\n" +
	"\tsignature\x18\x0e \x01(\fR\tsignature\x12\x16\n" +
	"\x06pubkey\x18\x0f \x01(\fR\x06pubkey\x12\x10\n" +
	"\x03alg\x18\x10 \x01(\tR\x03algB\x12Z\x10backend/proto;pbb\x06proto3"

var (
	file_control_reputation_proto_rawDescOnce sync.Once
	file_control_reputation_proto_rawDescData []byte
)

func file_control_reputation_proto_rawDescGZIP() []byte {
	file_control_reputation_proto_rawDescOnce.Do(func() {
		file_control_reputation_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_control_reputation_proto_rawDesc), len(file_control_reputation_proto_rawDesc)))
	})
	return file_control_reputation_proto_rawDescData
}

var file_control_reputation_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_control_reputation_proto_goTypes = []any{
	(*ReputationEvent)(nil), // 0: cybermesh.control.v1.ReputationEvent
}
var file_control_reputation_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_control_reputation_proto_init() }
func file_control_reputation_proto_init() {
	if File_control_reputation_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_control_reputation_proto_rawDesc), len(file_control_reputation_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_control_reputation_proto_goTypes,
		DependencyIndexes: file_control_reputation_proto_depIdxs,
		MessageInfos:      file_control_reputation_proto_msgTypes,
	}.Build()
	File_control_reputation_proto = out.File
	file_control_reputation_proto_goTypes = nil
	file_control_reputation_proto_depIdxs = nil
}
